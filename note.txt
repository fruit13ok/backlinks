// to begin this project
mkdir backlinks
cd backlinks
code .
npm init -y
npm install express puppeteer body-parser node-fetch cors --save
npm install nodemon --save-dev

// in package.json
    "start-dev": "nodemon server"

// create basic back end and front end directories and files
mkdir server
touch server/index.js
mkdir public
touch public/app.js public/index.html

// server/index.js
// After installed all packages, create ROOT and POST routes,
// ROOT route just be there, 
// POST route takes form input request and response back its input for now,
// should be able to test with Postman.

// public/app.js
// Access index.html form, on form submit, fetch a post request to backend index.js,
// get JSON object response back as array of form input for now,
// append response as HTML list below.

// public/index.html
// Access app.js, build a form with 3 input fields, a button, and a empty div,
// result will later append to empty div.

// run the server
npm run start-dev

// Without front end is ok, this is a back end only project that produce JSON result,
// This front end got redirected the path is for testing, everything can be test with Postman.

// upload to github as first milestone
echo "# backlinks" >> README.md
touch .gitignore
    // add 2 lines
    # dependencies
    /node_modules
    node_modules/
git init
git add .
git commit -m "first commit, basic server with form POST"
git remote add origin https://github.com/fruit13ok/backlinks.git
git push -u origin master

// if .gitignore not working, having upload project too large error,
// delete node_modules folder, push again,
// if still not work, delete .git folder too, try again.
// Remember to npm i before next run, might need to click refresh in folder explorer.

/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////

// I do search with url and param, not use puppeteer to step through each search action,
// because google.com use Angular to automatically generate elements,
// also it is harder to deal with shadow-dom.

// my approach to this scrape task
// 1). start from URL and DOM to select backlinks

// 1.1). google url search with verbatim to display result
https://www.google.com/search?q=symphysismarketing.com&tbs=li:1&start=0
// formated as:
domain name                         https://www.google.com
path                                /search?
1st param, search value             q=symphysismarketing.com
    user input:     symphysismarketing.com
and                                 &
2nd param, enable verbatim          tbs=li:1
and                                 &
3nd param, pagination               start=0
    loop to check no more result:   0
        EX:
        when start=n selectquery return empty array

// 1.2). DOM query select backlinks
let elements = document.querySelectorAll('#rso > .g > .rc > .r > a');
// formated as:
// parent element is important to exclude other children with .g .rc .r ...etc
parent div with id="rso"
    children div with class="g"
        children div with class="rc"
            children div with class="r"
                children anchor tag

//

////////////////////// to bypass recaptcha ///////////////////////
// resouces that I found
https://stackoverflow.com/questions/55678095/bypassing-captchas-with-headless-chrome-using-puppeteer
https://github.com/intoli/user-agents
https://github.com/skratchdot/random-useragent

// I use npm packages "user-agents"
https://github.com/intoli/user-agents


// I use proxy server to mask my ip too


//////////// as for 7-19-2020 version recaptcha remain an issue /////////////
// this version the way I open each result pages by page.goto() different url
// url differ by parameter start=NUMBER, 1st 0, then increase by 10 each loop
// until no more result found on the page

// next version I will try "find / click the next button, until no more next button"

https://www.google.com/search?q=%22homemade+souffle+pancake%22



////////////////////// fixed fetch problems ///////////////////////
// related to url load forever
// https://repl.it/@fruit13ok/fetchproblem

// related to node version, Hostname/IP doesn't match certificate's altnames
// add this line of code
process.env.NODE_TLS_REJECT_UNAUTHORIZED = false;

// related to localhost, getaddrinfo ENOTFOUND
// need to edit etc/hosts files with these lines
sudo vi /etc/hosts
127.0.0.1       localhost
255.255.255.255 broadcasthost
::1             localhost
fe80::1%lo0     localhost

/////////////////// this version overview ///////////////////
-took care off recaptcha by not using url parameter to search,
-took care off many request cases,
-same search will cause url status codes '408 Request Timeout' on good links,


//////////////////////////////////////////////////////
fix missing early result, not wait before loop